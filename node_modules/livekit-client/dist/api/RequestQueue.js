"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = __importDefault(require("../logger"));
class Queue {
    constructor() {
        this.queue = [];
        this.running = false;
    }
    enqueue(cb) {
        logger_1.default.trace('enqueuing request to fire later');
        this.queue.push(cb);
    }
    dequeue() {
        const evt = this.queue.shift();
        if (evt)
            evt();
        logger_1.default.trace('firing request from queue');
    }
    run() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.running)
                return;
            logger_1.default.trace('start queue');
            this.running = true;
            while (this.running && this.queue.length > 0) {
                this.dequeue();
            }
            this.running = false;
            logger_1.default.trace('queue finished');
        });
    }
    pause() {
        logger_1.default.trace('pausing queue');
        this.running = false;
    }
    reset() {
        logger_1.default.trace('resetting queue');
        this.running = false;
        this.queue = [];
    }
    isRunning() {
        return this.running;
    }
    isEmpty() {
        return this.queue.length === 0;
    }
}
exports.default = Queue;
//# sourceMappingURL=RequestQueue.js.map